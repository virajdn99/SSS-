import numpy as np
import matplotlib.pyplot as plt
from sklearn import svm

# Generate sample data
X = np.random.randn(200, 2)
y = np.logical_xor(X[:, 0] > 0, X[:, 1] > 0)

# Fit SVM model
model = svm.SVC(kernel='linear')
model.fit(X, y)

# Get support vectors and decision function values
support_vectors = model.support_vectors_
decision_values = model.decision_function(X)

# Create a meshgrid of points to plot the decision boundary
xx, yy = np.meshgrid(np.linspace(-3, 3, 500), np.linspace(-3, 3, 500))
Z = model.decision_function(np.c_[xx.ravel(), yy.ravel()])
Z = Z.reshape(xx.shape)

# Plot the data points and decision boundary
plt.scatter(X[:, 0], X[:, 1], c=y, cmap=plt.cm.Paired)
plt.contour(xx, yy, Z, colors='k', levels=[-1, 0, 1], alpha=0.5)
plt.scatter(support_vectors[:, 0], support_vectors[:, 1], color='red', marker='x', label='Support Vectors')
plt.legend()
plt.xlabel('X1')
plt.ylabel('X2')
plt.title('SVM Output')
plt.show()
